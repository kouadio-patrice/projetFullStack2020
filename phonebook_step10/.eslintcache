[{"D:\\FullStackOpen2020\\phonebook_step10\\src\\index.js":"1","D:\\FullStackOpen2020\\phonebook_step10\\src\\App.js":"2","D:\\FullStackOpen2020\\phonebook_step10\\src\\reportWebVitals.js":"3","D:\\FullStackOpen2020\\phonebook_step10\\src\\Input.js":"4","D:\\FullStackOpen2020\\phonebook_step10\\src\\service\\persons.js":"5","D:\\FullStackOpen2020\\phonebook_step10\\src\\Person.js":"6","D:\\FullStackOpen2020\\phonebook_step10\\src\\Notification.js":"7","D:\\FullStackOpen2020\\phonebook_step10\\src\\ErrorNotification.js":"8"},{"size":500,"mtime":1610441902339,"results":"9","hashOfConfig":"10"},{"size":4621,"mtime":1611060044325,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":221,"mtime":1610452212271,"results":"13","hashOfConfig":"10"},{"size":541,"mtime":1611059878540,"results":"14","hashOfConfig":"10"},{"size":267,"mtime":1610551057455,"results":"15","hashOfConfig":"10"},{"size":246,"mtime":1610558260528,"results":"16","hashOfConfig":"10"},{"size":255,"mtime":1610560196944,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17naya0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\FullStackOpen2020\\phonebook_step10\\src\\index.js",[],["38","39"],"D:\\FullStackOpen2020\\phonebook_step10\\src\\App.js",["40"],"import React, { useState, useEffect } from 'react'\nimport Input from './Input'\nimport personService from './service/persons'\nimport axios from 'axios';\nimport Person from './Person';\nimport Notification from './Notification';\nimport ErrorNotification from './ErrorNotification';\n\nconst App = (props) => {\n\n   const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('');\n  const [newNumber,setNewNumber] = useState('');\n  const [showAll ,setShowAll] = useState('')\n  const [successMessage , setSuccesMessage] = useState('Display message succes')\n  const [errorMessage, setErrorMessage ] = useState('some error happened...')\n const effet=() => {\n      console.log('effect');\n      personService\n        .getAll()\n        .then(initialpersons =>{\n          setPersons(initialpersons);\n         })\n    }\n     useEffect(effet,[])\n\n    let personToShow = persons; \n     const handlePersonChange = (event) =>{\n       setNewName(event.target.value)\n    }\n\n    const handleNumber = (event) =>{\n       setNewNumber(event.target.value)\n    }\n\n    const toggleImportanceOf = (id) => {\n      const person = persons.find(num => num.id === id)\n      const changedNumber = { ...person, newNumber: persons.number }\n    \n    personService\n      .update(id,changedNumber)\n      .then(returneNumber =>{\n         setPersons(persons.map(number => \n          number.id !== id? number : returneNumber))\n  })\n  .catch(error=> {\n    setErrorMessage(\n      `the name '${persons.name}\n    ' was already deleted from server`\n    )\n\n    /*alert(`the name '${persons.name}\n  //  ' was already deleted from server`\n    )*/\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n\n      setPersons(persons.filter(n => n.id !== id))\n  })\n}\n\n  const addPerson = (event) =>{\n     \n     event.preventDefault()\n     const personObjet = {\n       name:newName,\n       number:newNumber,\n     }\n\n     const incudePerson = persons.map(value => value.name)\n\n    if(incudePerson.includes(newName)){\n       alert(`${newName} is already added to phonebook`);\n       toggleImportanceOf(persons.id)\n       setNewName('');\n         setNewNumber('');\n      }\n      else{\n       personService\n        .create(personObjet)\n        .then(returnedPerson =>{\n           setPersons(persons.concat(returnedPerson));\n           setSuccesMessage(\n              `Added'${newName} successe`\n             )  \n           setNewName('');\n           setNewNumber('')\n        setTimeout(() => {\n          setSuccesMessage(null)\n        }, 5000)\n    }) \n   }\n  }\n\n   const handlerfilter = (event) =>{\n     setShowAll(event.target.value)\n       }\n\n   \n    \n    if(showAll){\n      const showFiltre = persons.filter(value =>value.name.includes(showAll));\n      personToShow = showFiltre;\n    }\n\n\n    const handlerClickDelete = (id) =>{\n      axios\n      .delete(`http://localhost:3001/persons/${id}`)\n      .then(response =>{ \n          setPersons(persons.filter(val => val.id !== id));\n          setNewName('');\n          setNewNumber('');\n          console.log('respose data',response.data)       })\n        .catch(error=>  {\n\n          setErrorMessage( error.message)\n          setTimeout(() => {\n            setErrorMessage(null)\n            console.log('erro',error)\n          }, 5000)\n\n    })  \n  }\n  return (\n    <div>\n\n<div>\n        filter shown with <Input \n                 newvalue ={showAll}\n                 handleronchange ={handlerfilter}\n                 />\n        </div>\n      <h2>Phonebook</h2>\n        <Notification message ={successMessage} />\n      <form onSubmit ={addPerson}>\n        <div>\n          name: <Input \n                 newvalue ={newName}\n                 handleronchange ={handlePersonChange}\n                 />\n        </div>\n        <div>\n          Number: <Input \n                 newvalue ={newNumber}\n                 handleronchange ={handleNumber}\n                 />\n        </div>\n        <button  type ='submit'>\n\n        {personToShow.map((nom,i) =>{\n          <Person \n          key={i}\n          toggleName ={() => toggleImportanceOf(nom.id)}\n          label ='add'\n          />\n        })\n        }\n         add\n        </button>\n      </form>\n      <h2>Numbers</h2>\n\n      <div>\n        {personToShow.map((nom,i) =>\n          <p key={i}>{ nom.name}  {nom.number} \n             <button  onClick={ () => {\n                if(window.confirm(`delete  ${nom.name} ?`)) {\n                  handlerClickDelete(nom.id)\n                }\n              }\n            }\n        >delete</button>\n        </p>)}\n      </div>\n  <ErrorNotification   message={errorMessage} />\n    </div>\n  )\n\n}\n\n\nexport default App","D:\\FullStackOpen2020\\phonebook_step10\\src\\reportWebVitals.js",[],"D:\\FullStackOpen2020\\phonebook_step10\\src\\Input.js",[],"D:\\FullStackOpen2020\\phonebook_step10\\src\\service\\persons.js",["41"],"import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3001/api/persons';\r\nconst getAll = () =>{\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = newObjet =>{\r\n    const request = axios.post(baseUrl,newObjet);\r\n    return request.then(response => response.data)\r\n}\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  \r\n  export default {getAll,create,update}","D:\\FullStackOpen2020\\phonebook_step10\\src\\Person.js",["42"],"import react from 'react'\r\n\r\nconst Person = (person,toggleName,label) =>{\r\n    \r\n    return(\r\n   <div>\r\n       {person.name}\r\n       <button type ='submit'\r\n       onClick ={toggleName} >{label}\r\n       </button>\r\n    \r\n    </div>\r\n    )\r\n}\r\nexport default Person\r\n\r\n","D:\\FullStackOpen2020\\phonebook_step10\\src\\Notification.js",[],"D:\\FullStackOpen2020\\phonebook_step10\\src\\ErrorNotification.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":152,"column":35,"nodeType":"49","messageId":"50","endLine":152,"endColumn":37},{"ruleId":"51","severity":1,"message":"52","line":19,"column":3,"nodeType":"53","endLine":19,"endColumn":40},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]